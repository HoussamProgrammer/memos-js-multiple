// Place your key bindings in this file to override the defaultsauto[]
[
	{
		"key": "alt+left",
		"command": "workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+k ctrl+pageup",
		"command": "-workbench.action.previousEditorInGroup"
	},
	{
		"key": "alt+right",
		"command": "workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+k ctrl+pagedown",
		"command": "-workbench.action.nextEditorInGroup"
	},
	{
		"key": "alt+left",
		"command": "workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "ctrl+alt+left",
		"command": "-workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "ctrl+alt+right",
		"command": "-workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "alt+left",
		"command": "workbench.action.previousEditor"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "alt+right",
		"command": "workbench.action.nextEditor"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "ctrl+k e",
		"command": "-workbench.files.action.focusOpenEditorsView",
		"when": "workbench.explorer.openEditorsView.active"
	},
	{
		"key": "alt+1",
		"command": "workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "ctrl+shift+e",
		"command": "-workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "alt+4",
		"command": "spring-boot-dashboard.focus"
	},
	{
		"key": "alt+3",
		"command": "mavenProjects.focus"
	},
	{
		"key": "shift+alt+n",
		"command": "explorer.newFile"
	},
	{
		"key": "ctrl+m",
		"command": "workbench.action.maximizeEditor"
	},
	{
		"key": "shift+f10",
		"command": "-editor.action.showContextMenu",
		"when": "textInputFocus"
	},
	{
		"key": "shift+f10",
		"command": "workbench.action.debug.restart",
		"when": "inDebugMode"
	},
	{
		"key": "ctrl+shift+f5",
		"command": "-workbench.action.debug.restart",
		"when": "inDebugMode"
	},
	{
		"key": "alt+;",
		"command": "editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+oem_2",
		"command": "-editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+f10",
		"command": "java.debug.runJavaFile"
	},
	{
		"key": "ctrl+x ctrl+s",
		"command": "saveAll"
	},
	{
		"key": "ctrl+k s",
		"command": "-saveAll"
	},
	{
		"key": "ctrl+shift+m",
		"command": "-workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{
		"key": "ctrl+shift+i",
		"command": "extension.javaGenerateAll"
	},
	{
		"key": "alt+enter",
		"command": "problems.action.showQuickFixes",
		"when": "problemFocus"
	},
	{
		"key": "ctrl+oem_period",
		"command": "-problems.action.showQuickFixes",
		"when": "problemFocus"
	},
	{
		"key": "alt+enter",
		"command": "editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+oem_period",
		"command": "-editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+s",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+5",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+oem_comma",
		"command": "-workbench.action.openSettings"
	},
	{
		"key": "ctrl+space",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+space",
		"command": "-toggleSuggestionDetails",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+r",
		"command": "editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f2",
		"command": "-editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+oem_6",
		"command": "-editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+right",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+left",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+x ctrl+v",
		"command": "java.view.package.newPackage"
	},
	{
		"key": "ctrl+x ctrl+n",
		"command": "java.view.package.newJavaClass"
	},
	{
		"key": "ctrl+u",
		"command": "-cursorUndo",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+u",
		"command": "editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "f12",
		"command": "-editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+x ctrl+c",
		"command": "workbench.action.closeAllEditors"
	},
	{
		"key": "ctrl+k ctrl+w",
		"command": "-workbench.action.closeAllEditors"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quickOpenView"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quickOpenNavigateNextInViewPicker",
		"when": "inQuickOpen && inViewsPicker"
	},
	{
		"key": "ctrl+a",
		"command": "editor.action.showDefinitionPreviewHover"
	},
	{
		"key": "ctrl+shift+numpad_subtract",
		"command": "search.action.collapseSearchResults"
	},
	{
		"key": "ctrl+shift+f",
		"command": "editor.action.format"
	},
	{
		"key": "ctrl+[Quote]",
		"command": "workbench.action.terminal.toggleTerminal"
	},
	{
		"key": "ctrl+[Comma]",
		"command": "-editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+[Comma]",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+t",
		"command": "-surround.with",
		"when": "editorHasSelection"
	},
	{
		"key": "ctrl+j",
		"command": "editor.action.insertSnippet",
		"when": "editorTextFocus",
		"args": {
			"snippet": "\"${TM_SELECTED_TEXT}\""
		}
	},
	{
		"key": "ctrl+z",
		"command": "-undo"
	},
	{
		"key": "ctrl+shift+z",
		"command": "redo"
	},
	{
		"key": "ctrl+shift+z",
		"command": "-redo"
	},
	{
		"key": "alt+w",
		"command": "emacs.M-w",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+w",
		"command": "-emacs.M-w",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+w",
		"command": "emacs.C-w",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+w",
		"command": "-emacs.C-w",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+a",
		"command": "emacs.cursorHome",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+a",
		"command": "-emacs.cursorHome",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+1",
		"command": "workbench.files.action.showActiveFileInExplorer"
	},
	{
		"key": "ctrl+x ;",
		"command": "workbench.action.toggleZenMode"
	},
	{
		"key": "ctrl+x z",
		"command": "-workbench.action.toggleZenMode"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+z",
		"command": "undo"
	},
	{
		"key": "ctrl+y",
		"command": "-redo"
	},
	{
		"key": "ctrl+shift+f",
		"command": "notebook.formatCell",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-notebook.formatCell",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+x p",
		"command": "workbench.action.showCommands"
	},
	{
		"key": "ctrl+shift+p",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "shift+tab",
		"command": "editor.action.formatChanges"
	},
	{
		"key": "alt+;",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+;",
		"command": "-editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quit"
	},
	{
		"key": "alt+p",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+n",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+k",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+p",
		"command": "editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+n",
		"command": "editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+2",
		"command": "workbench.action.toggleActivityBarVisibility"
	},
	{
		"key": "alt+3",
		"command": "workbench.action.togglePanel"
	},
	{
		"key": "ctrl+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "ctrl+k ctrl+0",
		"command": "-editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+]",
		"command": "editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+j",
		"command": "-editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+numpad_subtract",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "ctrl+[",
		"command": "editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+[",
		"command": "-editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+]",
		"command": "editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+]",
		"command": "-editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+numpad_add",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+[",
		"command": "editor.foldAll"
	},
	{
		"key": "ctrl+shift+j",
		"command": "insertSnippet",
		"when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
	},
	{
		"key": "tab",
		"command": "-insertSnippet",
		"when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
	},
	{
		"key": "ctrl+shift+o",
		"command": "workbench.action.toggleAuxiliaryBar"
	},
	{
		"key": "alt+2",
		"command": "-workbench.action.openEditorAtIndex2"
	},
	{
		"key": "ctrl+alt+\\",
		"command": "editor.action.selectToBracket"
	},
	{
		"key": "backspace",
		"command": "-emacs.deleteLeft",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "delete",
		"command": "-emacs.deleteRight",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+e",
		"command": "editor.action.jumpToBracket",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+\\",
		"command": "-editor.action.jumpToBracket",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+d",
		"command": "-editor.action.addSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+f3",
		"command": "-editor.action.nextSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ctrl+x",
		"command": "-editor.action.trimTrailingWhitespace",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+o",
		"command": "editor.action.insertLineBefore",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-editor.action.insertLineBefore",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFileFolder",
		"when": "isMacNative && openFolderWorkspaceSupport"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "ctrl+x",
		"command": "-filesExplorer.cut",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "alt+i",
		"command": "editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	}
]